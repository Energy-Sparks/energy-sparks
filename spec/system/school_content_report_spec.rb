require 'rails_helper'

RSpec.describe "school content report", type: :system do
  let!(:school) { create(:school) }
  let!(:user)  { create(:admin)}
  let(:description) { 'all about this alert type' }
  let!(:gas_fuel_alert_type) { create(:alert_type, fuel_type: :gas, frequency: :termly, description: description) }
  let(:gas_date) { Date.parse('2019-01-01') }
  let!(:gas_meter) { create :gas_meter_with_reading, school_id: school.id }

  before(:each) do
    sign_in(user)
  end

  context 'with generated alert' do

    let!(:alert_type_rating) do
      create(
        :alert_type_rating,
        alert_type: gas_fuel_alert_type,
        rating_from: 0,
        rating_to: 10,
        find_out_more_active: true,
        management_dashboard_alert_active: true,
        pupil_dashboard_alert_active: true,
      )
    end
    let!(:alert_type_rating_content_version) do
      create(
        :alert_type_rating_content_version,
        alert_type_rating: alert_type_rating,
        management_dashboard_title: 'Your heating is on!',
        pupil_dashboard_title: 'It is too warm'
      )
    end
    let(:alert_summary){ 'Summary of the alert' }
    let!(:alert) do
      create(:alert, :with_run,
        alert_type: gas_fuel_alert_type,
        run_on: gas_date, school: school,
        rating: 9.0,
        table_data: {
          dummy_table: [['Header 1', 'Header 2'], ['Body 1', 'Body 2']]
        }
      )
    end

    before do
      Alerts::GenerateContent.new(school).perform
    end

    it 'shows the content generated by the run' do
      visit school_path(school)
      click_on('Batch reports')
      click_on('Content reports')
      click_on 'View'


      expect(page).to have_content('Your heating is on!')
      expect(page).to have_content('It is too warm')

    end

  end
end
