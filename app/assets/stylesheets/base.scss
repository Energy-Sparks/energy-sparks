body {
  @include font(f6);
  font-family: $default-font-family;
  font-weight: $default-font-weight;
  overflow-x: hidden;
}

div.application.container {
  padding-bottom: 30px;
}

.navigation-margin {
  margin-top: 108px;
}

section.home.alerts .alert {
  margin-bottom: 0px;
}

address {
  display: inline !important;
  font-size: initial;
}

p {
  @include font(f6);
}

.small {
  @include font(f7);
}

.very-small {
  @include font(f8);
}

.nowrap {
  white-space: nowrap;
}

.bg-light-blue {
  background-image: linear-gradient(to right, $blue-light 0%, $blue-pale 100%);
}

section.padded-section {
  padding: 100px 0;
}

div.padded-row {
  padding-top: 30px;
  padding-bottom: 30px;
}

div.callout-text {
  padding-right: 30px;
}

@media (max-width: 767px) {
  section {
    padding: 75px 0;
  }
  section.first {
    padding-top: 75px;
  }
}

div.bio {
  border: none;
}

div.hide {
  display: none;
}

.hidden {
  display: none;
}

table th.actions {
  width: 20%;
}

table th.description {
  width: 50%;
}

th.fixed-width-150 {
  min-width: 150px;
}

.table td.fit {
  white-space: nowrap;
  width: 1px;
}

.table td.overflow {
  white-space: nowrap;
  text-overflow:ellipsis;
  overflow: hidden;
  max-width:1px;
}

div.meter-attributes {
  kbd {
    color: $black;
    background-color: $white;
  }
}

// Stops bootstrap hiding error messages for wrapped inputs
// OK for us as we don't render invalid feedback unless there is an error
.invalid-feedback {
  display: block !important;
}

// imput fields with specified 'pattern' will highlight when invalid
input:invalid {
  color: $danger;
}

.funnel-image {
  border-radius: 0.5rem 0.5rem;
}

.nav-anchor a {
  position: absolute;
  left: 0px;
  top: -60px;
}

.nav-anchor {
  position: relative;
}

.static-images {
  height: 300px;
  width: 400px;
}

.static-images.small {
  height: 200px;
  width: 300px;
}

.accordion-block {
  padding-top: 20px;
}

dl dt {
  margin-bottom: 0.5rem;
}

.terms-and-conditions {
  ul {
    list-style-type: none;
  }
  ul li {
    margin: 0 0 10px 0;
  }
  table {
    width: 100%;
    margin-bottom: 30px;
  }
  .right {
    text-align: right;
  }
}

input, progress {
  // had to darken slightly as the second accent colour (which is chosen by the browser) is either light or dark, depending on how dark the accent colour is.
  accent-color: darken($teal-dark, 5%) !important;
}

.agreements {
  margin-top: 20px;
  margin-bottom: 20px;
}

.text-break {
  white-space: pre-line;
}

.main-breadcrumbs .breadcrumb-item+.breadcrumb-item::before {
  content: quote(">");
}

.main-breadcrumbs {
  background-color: transparent;
  padding: 0;
}

.header-dark {
  background-color: $header-dark;
}

.text-white {
  color: $white;
}

.text-grey-light {
  color: $grey-light;
}

.text-dark-blue {
  color: $blue-very-dark;
}

.card .card-footer.plain {
  border-top: none;
  background-color: white;
}

// polarity styles

@each $polarity, $tones in $colours-polarity {
  // e.g. .bg-positive, .bg-neutral, .bg-negative
  .bg-#{$polarity} {
    background-image: linear-gradient(to right, map-get($tones, 'dark') 0%, map-get($tones, 'light') 100%);
  }

  // e.g. .bg-positive-dark, .bg-neutral-dark, .bg-negative-dark
  .bg-#{$polarity}-dark {
    background-color: map-get($tones, 'dark');
  }

  // e.g. .bg-positive-light, .bg-neutral-light, .bg-negative-light
  .bg-#{$polarity}-light {
    background-color: map-get($tones, 'light');
  }
}

@each $polarity, $tones in $colours-polarity {
  // e.g. .text-positive, .text-neutral, .text-negative
  .text-#{$polarity} {
    color: map-get($tones, 'dark')
  }
}

// fuel colour styles
@each $fuel, $tones in $colours-fuel {
  // e.g. .bg-electric-light, .bg-gas-light, .bg-storage-light, .bg-solar-light
  .bg-#{$fuel}-light {
    background-color: map-get($tones, 'light'); // was medium
  }

  // e.g. .bg-electric-dark, .bg-gas-dark, .bg-storage-dark, .bg-solar-dark
  .bg-#{$fuel}-dark {
    background-color: map-get($tones, 'dark');
  }

  // e.g. .text-electric, .text-gas, .text-storage, .text-solar
  .text-#{$fuel} {
    color: map-get($tones, 'dark');
  }
}

// comparison styles - unused?
@each $tag, $colour in $colours-comparison {
  // e.g. .bg-exemplar_school, .bg-benchmark_school, .bg-other_school
  .bg-#{$tag} {
    background-color: $colour !important;
  }

  // e.g. .text-exemplar_school, .text-benchmark_school, .text-other_school
  .text-#{$tag} {
    text-decoration: underline;
    text-decoration-color: $colour;
    text-decoration-thickness: 3px;
    font-weight: bolder;
  }
}
