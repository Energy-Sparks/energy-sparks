<%= content_for :page_title, t('school_groups.secr.title') %>
<h1><%= t('school_groups.secr.title') %></h1>

<%= render TabsComponent.new do |component| %>
  <% component.with_tab(name: :usage, label: t('school_groups.secr.tabs.usage')) do %>
    <%= t('school_groups.secr.usage.purpose_of_this_tool_html') %>
    <%= t('school_groups.secr.usage.what_is_included_html') %>
    <%= t('school_groups.secr.usage.how_to_identify_gaps_html') %>
    <%= t('school_groups.secr.usage.how_to_improve_html') %>
  <% end %>
  <% component.with_tab(name: :data, label: t('school_groups.secr.tabs.data')) do %>
    <p><%= t('school_groups.secr.data.introduction', last_start_date: @dates[0][0].to_fs(:es_short),
                                                     last_end_date: @dates[0][1].to_fs(:es_short),
                                                     current_start_date: @dates[1][0].to_fs(:es_short),
                                                     current_end_date: @dates[1][1].to_fs(:es_short)) %></p>
    <% meters = @school_group.meters.active.where('schools.active')
       schools = @school_group.schools.active
       number_of_pupils = schools.sum(:number_of_pupils) %>
    <%= render 'table', meters:,
                        year: @dates[1][0].year + (@dates[1][1].month > 3 ? 1 : 0),
                        title: t('school_groups.secr.data.current_table_title', start_date: @dates[1][0],
                                                                                end_date: @dates[1][1]),
                        number_of_pupils: %>
    <%= render 'table', meters:,
                        year: @dates[0][1].year,
                        title: t('school_groups.secr.data.previous_table_title', start_date: @dates[0][0],
                                                                                 end_date: @dates[0][1]),
                        number_of_pupils: %>
    <%= schools = schools.pluck(:id)
        t('school_groups.secr.data.supporting_notes_html',
          active_schools: schools.length,
          gas_meters: meters.gas.count,
          electricity_meters: meters.electricity.count,
          metered_solar_schools: (MeterAttribute.metered_solar.pluck(:school_id) & schools).length,
          estimated_solar_schools: (MeterAttribute.solar_pv.pluck(:school_id) & schools).length,
          number_of_pupils:) %>
    <%= t('school_groups.secr.data.carbon_emission_factors_html') %>
    <h2><%= t('school_groups.secr.data.downloads.title') %></h2>
    <p><%= t('school_groups.secr.data.downloads.introduction') %></p>
    <ul>
      <% types = %w[electricity gas self export]
         years = @dates.map { | date| "#{date[0].year}/#{(date[0].year + 1).to_s.last(2)}" }
         years.each_with_index do |year, i|
           types.each do |type| %>
          <% csv = "#{type}#{i.zero? ? '_previous' : ''}" %>
          <%# i18n-tasks-use t('school_groups.secr.data.downloads.electricity') %>
          <%# i18n-tasks-use t('school_groups.secr.data.downloads.gas') %>
          <%# i18n-tasks-use t('school_groups.secr.data.downloads.self') %>
          <%# i18n-tasks-use t('school_groups.secr.data.downloads.export') %>
          <li><%= link_to t("school_groups.secr.data.downloads.#{type}", year:),
                          school_group_secr_index_path(@school_group, format: :csv, csv:) %></li>
        <% end %>
      <% end %>
    </ul>
    <%= t('school_groups.secr.data.data_quality_html') %>
  <% end %>
<% end %>
